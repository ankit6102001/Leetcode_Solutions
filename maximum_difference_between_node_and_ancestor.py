# -*- coding: utf-8 -*-
"""Maximum Difference Between Node and Ancestor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JhVeoGM25AbjjauGKpXEmOw6RZwZ-MxG
"""

# Leetcode : https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxAncestorDiff(self, root: Optional[TreeNode]) -> int:
        def dfs(node, min_val, max_val):
            if not node:
                return abs(max_val - min_val)

            min_val = min(min_val, node.val)
            max_val = max(max_val, node.val)

            left = dfs(node.left, min_val, max_val)
            right = dfs(node.right, min_val, max_val)

            return max(left, right)

        return dfs(root, float('inf'), float('-inf'))